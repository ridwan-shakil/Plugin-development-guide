
üì¶ npm Notes for WordPress Plugin Development
What is npm?
‚Ä¢	npm = Node Package Manager
‚Ä¢	A tool that manages JavaScript libraries and dependencies.
‚Ä¢	Similar to Composer for PHP, but for JS.
‚Ä¢	Comes with Node.js (so you need Node installed).
________________________________________

Why use npm in WordPress Plugins?
‚Ä¢	Avoid manually downloading .js files.
‚Ä¢	Quickly install and update libraries (e.g., npm install choices.js).
‚Ä¢	Keep plugin size small (don‚Äôt commit node_modules).
‚Ä¢	Use modern tools (webpack, vite, gulp) to bundle, minify, and optimize scripts.
‚Ä¢	Ensures consistency across projects with package.json.
________________________________________

Core Files
1.	package.json
o	Created with npm init -y
o	Stores project details + list of dependencies.
{
  "name": "my-wp-plugin",
  "version": "1.0.0",
  "dependencies": {
    "choices.js": "^10.2.0"
  }
}
2.	node_modules/
o	Where all installed packages live (auto-generated).
o	‚ö†Ô∏è Don‚Äôt commit this folder to GitHub.
3.	package-lock.json
o	Ensures everyone installs the exact same versions.
o	Should be committed to GitHub.
________________________________________

Basic Commands
‚Ä¢	Initialize:
‚Ä¢	npm init -y
‚Ä¢	Install a package:
‚Ä¢	npm install choices.js
‚Ä¢	Install for dev tools only (not needed in production):
‚Ä¢	npm install webpack webpack-cli --save-dev
‚Ä¢	Run a script defined in package.json:
‚Ä¢	npm run build
________________________________________

Typical Workflow in a WP Plugin
1.	npm init -y ‚Üí create package.json.
2.	npm install <library> ‚Üí install JS libraries.
3.	Write your custom JS (admin.js, frontend.js).
4.	Use a bundler (like webpack) to combine dependencies into one file.
o	Example: npm run build ‚Üí generates admin.bundle.js.
5.	Enqueue the bundled file in your plugin:
6.	wp_enqueue_script(
  'my-plugin-admin',
  plugins_url('assets/js/admin.bundle.js', __FILE__),
  ['jquery'],
  '1.0',
  true
);
________________________________________

Best Practices
‚Ä¢	Don‚Äôt commit node_modules/ (add to .gitignore).
‚Ä¢	Commit package.json and package-lock.json.
‚Ä¢	Use --save-dev for build tools (webpack, gulp).
‚Ä¢	Use dependencies only for libraries you‚Äôll load in your plugin.
‚Ä¢	Keep a build process (like npm run build) so you always generate optimized files before release.
________________________________________

‚úÖ Summary:
npm helps you install and manage JavaScript libraries in your WordPress plugins. Instead of downloading .js files manually, you declare them in package.json, install with npm install, bundle with webpack (or similar), and enqueue the bundled output in WordPress.

